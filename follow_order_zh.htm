<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

    <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>BKEX API 文档</title>
    <style>
        .next-ul-show{
            display: block !important;
        }
        .highlight table td {
            padding: 5px;
        }

        .highlight table pre {
            margin: 0;
        }

        .highlight .gh {
            color: #999999;
        }

        .highlight .sr {
            color: #f6aa11;
        }

        .highlight .go {
            color: #888888;
        }

        .highlight .gp {
            color: #555555;
        }

        .highlight .gu {
            color: #aaaaaa;
        }

        .highlight .nb {
            color: #f6aa11;
        }

        .highlight .cm {
            color: #75715e;
        }

        .highlight .cp {
            color: #75715e;
        }

        .highlight .c1 {
            color: #75715e;
        }

        .highlight .cs {
            color: #75715e;
        }

        .highlight .c, .highlight .cd {
            color: #75715e;
        }

        .highlight .err {
            color: #960050;
        }

        .highlight .gr {
            color: #960050;
        }

        .highlight .gt {
            color: #960050;
        }

        .highlight .gd {
            color: #49483e;
        }

        .highlight .gi {
            color: #49483e;
        }

        .highlight .ge {
            color: #49483e;
        }

        .highlight .kc {
            color: #66d9ef;
        }

        .highlight .kd {
            color: #66d9ef;
        }

        .highlight .kr {
            color: #66d9ef;
        }

        .highlight .no {
            color: #66d9ef;
        }

        .highlight .kt {
            color: #66d9ef;
        }

        .highlight .mf {
            color: #ae81ff;
        }

        .highlight .mh {
            color: #ae81ff;
        }

        .highlight .il {
            color: #ae81ff;
        }

        .highlight .mi {
            color: #ae81ff;
        }

        .highlight .mo {
            color: #ae81ff;
        }

        .highlight .m, .highlight .mb, .highlight .mx {
            color: #ae81ff;
        }

        .highlight .sc {
            color: #ae81ff;
        }

        .highlight .se {
            color: #ae81ff;
        }

        .highlight .ss {
            color: #ae81ff;
        }

        .highlight .sd {
            color: #e6db74;
        }

        .highlight .s2 {
            color: #e6db74;
        }

        .highlight .sb {
            color: #e6db74;
        }

        .highlight .sh {
            color: #e6db74;
        }

        .highlight .si {
            color: #e6db74;
        }

        .highlight .sx {
            color: #e6db74;
        }

        .highlight .s1 {
            color: #e6db74;
        }

        .highlight .s {
            color: #e6db74;
        }

        .highlight .na {
            color: #a6e22e;
        }

        .highlight .nc {
            color: #a6e22e;
        }

        .highlight .nd {
            color: #a6e22e;
        }

        .highlight .ne {
            color: #a6e22e;
        }

        .highlight .nf {
            color: #a6e22e;
        }

        .highlight .vc {
            color: #ffffff;
        }

        .highlight .nn {
            color: #ffffff;
        }

        .highlight .nl {
            color: #ffffff;
        }

        .highlight .ni {
            color: #ffffff;
        }

        .highlight .bp {
            color: #ffffff;
        }

        .highlight .vg {
            color: #ffffff;
        }

        .highlight .vi {
            color: #ffffff;
        }

        .highlight .nv {
            color: #ffffff;
        }

        .highlight .w {
            color: #ffffff;
        }

        .highlight {
            color: #ffffff;
        }

        .highlight .n, .highlight .py, .highlight .nx {
            color: #ffffff;
        }

        .highlight .ow {
            color: #f92672;
        }

        .highlight .nt {
            color: #f92672;
        }

        .highlight .k, .highlight .kv {
            color: #f92672;
        }

        .highlight .kn {
            color: #f92672;
        }

        .highlight .kp {
            color: #f92672;
        }

        .highlight .o {
            color: #f92672;
        }

    </style>
    <link href="./api/screen.css" rel="stylesheet" media="screen">
    <link href="./api/print.css" rel="stylesheet" media="print">
    <!--    <script src="./api/all.js"></script>-->
    <script src="./api/jquery.min.js"></script>

    <link rel="shortcut icon" href="api/logo.png">
</head>

<body class="api_zh" data-languages="[&quot;shell&quot;]">
<a href="./follow_order_zh.htm?shell#" id="nav-button">
      <span>
        <img src="./api/navbar.png" alt="Navbar">
      </span>
</a>
<header>
    <div class="flex_box">
        <a href="https://www.bkex.co/" class="a-logo">
            <img src="./api/newlogo.png" class="logo" alt="Logo">
        </a>

    </div>
<!--    <a href="https://bkexapi.github.io/docs/spot/v1/en/" class="lang" id="lang_box" style="display: block;">English</a>-->
</header>
<div class="toc-wrapper">
    <div class="lang-selector">
        <a href="./follow_order_zh.htm?shell#" data-language-name="shell" class="active">shell</a>
    </div>
    <ul id="toc" class="toc-list-h1">
        <li>
            <a href="./follow_order_zh.htm?shell#useQuick" class="toc-h1 toc-link" data-title="接入说明">接入说明</a>
            <ul class="toc-list-h2">
                <li>
                    <a href="./follow_order_zh.htm?shell#useQuick-1" class="toc-h2 toc-link" data-title="接入准备">接入准备</a>
                </li>
                <li>
                    <a href="./follow_order_zh.htm?shell#useQuick-4" class="toc-h2 toc-link" data-title="接入URLs">接入URLs</a>
                </li>
                <li>
                    <a href="./follow_order_zh.htm?shell#useQuick-5" class="toc-h2 toc-link" data-title="签名认证">签名认证</a>
                </li>
                <li>
                    <a href="./follow_order_zh.htm?shell#useExplain-1" class="toc-h2 toc-link" data-title="接口概览">接口概览</a>
                </li>
                <li>
                    <a href="./follow_order_zh.htm?shell#useExplain-2" class="toc-h2 toc-link" data-title="限频规则">限频规则</a>
                </li>
                <li>
                    <a href="./follow_order_zh.htm?shell#useExplain-3" class="toc-h2 toc-link" data-title="请求格式">请求格式</a>
                </li>
                <li>
                    <a href="./follow_order_zh.htm?shell#useExplain-4" class="toc-h2 toc-link" data-title="返回格式">返回格式</a>
                </li>
            </ul>
        </li>
        <li>
            <a href="./follow_order_zh.htm?shell#urlDescription" class="toc-h1 toc-link" data-title="接口说明">接口说明</a>
            <ul class="toc-list-h2">
                <li>
                    <a href="./follow_order_zh.htm?shell#subAccountCreate" class="toc-h2 toc-link" data-title="注册子账号">注册子账号</a>
                </li>
                <li>
                    <a href="./follow_order_zh.htm?shell#subAccountQuery" class="toc-h2 toc-link" data-title="子账号查询">子账号查询</a>
                </li>
                <li>
                    <a href="./follow_order_zh.htm?shell#subAccountIpUpdate" class="toc-h2 toc-link" data-title="更新ip白名单">更新ip白名单</a>
                </li>
                <li>
                    <a href="./follow_order_zh.htm?shell#subAccountTransfer" class="toc-h2 toc-link" data-title="资金划转">资金划转</a>
                </li>
            </ul>
        </li>

    </ul>
    <ul class="toc-footer">
        <li><a href="https://www.bkex.co/user/api">创建 API Key </a></li>
    </ul>
</div>
<div class="page-wrapper">
    <div class="dark-box"></div>
    <div class="content">


        <h1 id="useQuick">接入说明</h1>
        <h2 id="useQuick-1">接入准备</h2>
        <p>需要您先注册主账户，并创建api-key </p>

        <p>您可以点击 <a href="https://www.bkex.co/user/api">这里 </a> 创建 API Key。</p>

        <p>创建成功后请务必记住以下信息：</p>

        <ul>
            <li><p><code>Access Key</code> API 访问密钥</p></li>
            <li><p><code>Secret Key</code> 签名认证加密所使用的密钥（仅申请时可见）</p></li>
        </ul>

        <aside class="notice">
            创建 API Key 时可以绑定 IP 地址，有效期为90天。如需修改有效期，请联系我们后台修改。出于安全考虑，强烈建议您绑定 IP 地址。
        </aside>

        <aside class="warning">
            <red><b>风险提示</b></red>
            ：这两个密钥与账号安全紧密相关，无论何时都请勿将二者<b>同时</b>向其它人透露。API Key的泄露可能会造成您的资产损失（即使未开通提币权限），若发现API Key泄露请尽快删除该API Key。
        </aside>

        <h2 id="useQuick-4">接入URLs</h2>
        <p>您可以自行比较使用api.bkex.co和api.bkex.com两个域名的延迟情况，选择延迟低的进行使用。 </p>

        <p><strong>REST API</strong></p>

        <p><strong><code>https://api.bkex.co</code></strong></p>

        <p><strong><code>https://api.bkex.com</code></strong></p>


        <h2 id="useQuick-5">时间同步安全</h2>
        <ul>
            <li>timestamp：请求发送时间。签名接口均可传递 timestamp参数（建议签名接口都使用），其值应当是请求发送时刻的unix时间戳（毫秒）</li>
            <li>recvWindow:时间空窗，默认值为5000(毫秒)。服务器收到请求时会判断请求中的时间戳，如果是5000毫秒之前发出的，则请求会被认为无效。互联网状况并不完全稳定可靠,因此你的程序本地到币安服务器的时延会有抖动。这是我们设置recvWindow的目的所在，如果你从事高频交易，对交易时效性有较高的要求，可以灵活设置recvWindow以达到你的要求</li>
        </ul>


        <h2 id="useQuick-51">签名认证</h2>
        <h3 id="34addae335">签名说明</h3>
        <p>每个接口都需要签名验证</p>

        <p>一个合法的请求所需要的内容：</p>

        <ul>
            <li>方法请求地址：即访问服务器地址 api.bkex.co，比如 https://api.bkex.co/v2/u/order/create。</li>
            <li>API 访问密钥（X_ACCESS_KEY）：您申请的 API Key 中的 Access Key。</li>
            <li>必选和可选参数：每个方法都有一组用于定义 API 调用的必需参数和可选参数。可以在每个方法的说明中查看这些参数及其含义。</li>
            <li>签名：加密计算得出的值，用于确保签名有效和未被篡改。</li>
        </ul>
        <h3 id="1fbac240b7">加密方式</h3>
        <p>规范要计算签名的请求 因为使用 HMAC 进行签名计算时，使用不同内容计算得到的结果会完全不同。所以在进行签名计算前，请先对请求进行规范化处理。下面以查询某订单详情请求为例进行说明：</p>

        <p>下单请求URL</p>
        <p><code>https://api.bkex.co/v2/u/order/create?volume=0.12&direction=ASK&price=7126.4285&symbol=BTC_USDT</code>
        </p>
        <p>对参数按照ASCII码顺序进行排序</p>
        <p><code>direction=ASK&price=7126.4285&symbol=BTC_USDT&volume=0.12</code></p>
        <p>将排完序的请求参数使用secretKey 进行HMAC SHA256进行加密，得到的结果</p>
        <p><code>550ac73ace8c34372e0e1dd6631e890c7bd16697af8bb4e2908e966b50aba4e0</code></p>
        <h4>构造http请求使用 </h4>
        <ol>
            <li>使用 X_ACCESS_KEY 这个header存储access key信息</li>
            <li>使用 X_SIGNATURE 这个header存储生成的签名信息</li>
        </ol>
        <p>然后发送http请求</p>

        <h2 id="useQuick-6">枚举定义</h2>
        <h3 id="b79e080266">交易对</h3>
        <p>交易对由基础币种和报价币种组成。以交易对 BTC_USDT 为例，BTC 为基础币种，USDT 为报价币种。 </p>


        <h2 id="useExplain-1">接口概览</h2>
        <table>
            <thead>
            <tr>
                <th>url</th>
                <th>概述</th>
            </tr>
            </thead>
            <tbody>
            <tr>
                <td>/fo/subAccount/create</td>
                <td>注册子账号</td>
            </tr>
            <tr>
                <td>/fo/subAccount/list</td>
                <td>子账号查询</td>
            </tr>
            <tr>
                <td>/fo/subAccount/updateIps</td>
                <td>修改子账号ip白名单</td>
            </tr>
            <tr>
                <td>/fo/subAccount/transfer</td>
                <td>母账号和子账号之间划转</td>
            </tr>
            <tr>
                <td>/v2/contract/*</td>
                <td>合约行情和交易相关接口.您可以点击 <a href="https://bkexapi.github.io/docs/api_zh.htm?shell#contract">这里 </a> 查看</td>
            </tr>
            </tbody>
        </table>

        <h2 id="useExplain-2">限频规则</h2>
        <ul>
            <li>每个API Key 在1秒之内限制10次</li>
            <li>合约行情和交易相关接口有单独的限频规则</li>
            <li>超过限频数量，会被封禁5-10秒</li>

        </ul>

        <h2 id="useExplain-3">请求格式</h2>
        <p>所有的API请求都是restful，目前只有两种方法：GET和POST</p>

        <ul>
            <li>GET请求：所有的参数都在路径参数里</li>
            <li>POST请求，所有参数以form-data格式发送在请求主体（body）里</li>
        </ul>
        <h2 id="useExplain-4">返回格式</h2>
        <p>所有的接口都是JSON格式。在JSON最上层有三个字段：<code>msg</code>, <code>code</code> 和
            <code>data</code>。前两个字段表示请求状态和信息，实际的业务数据在<code>data</code>字段里。</p>

        <p>以下是一个返回格式的样例：</p>
        <pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"mgs""</span><span class="p">:</span><span class="w"> </span><span class="s2">"success"</span><span
                class="p">,</span><span class="w">
  </span><span class="s2">"code"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0"</span><span
                class="p">,</span><span class="w">
  </span><span class="s2">"data"</span><span class="p">:</span><span class="w"> </span><span class="err">//</span><span
                class="w"> </span><span class="err">per</span><span class="w"> </span><span class="err">API</span><span
                class="w"> </span><span class="err">response</span><span class="w"> </span><span class="err">data</span><span
                class="w"> </span><span class="err">in</span><span class="w"> </span><span
                class="err">nested</span><span class="w"> </span><span class="err">JSON</span><span
                class="w"> </span><span class="err">object</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
        <table>
            <thead>
            <tr>
                <th>参数名称</th>
                <th>数据类型</th>
                <th>描述</th>
            </tr>
            </thead>
            <tbody>
            <tr>
                <td>msg</td>
                <td>string</td>
                <td>API信息返回</td>
            </tr>
            <tr>
                <td>code</td>
                <td>int</td>
                <td>接口状态返回，0代表成功</td>
            </tr>
            <tr>
                <td>data</td>
                <td>object</td>
                <td>接口返回数据主体</td>
            </tr>
            </tbody>
        </table>


        <h1 id="urlDescription">接口说明</h1>

        <h2 id="subAccountCreate">创建子账号</h2>
        <p>注册一个子账号，注册失败时，可以调用此接口从新注册</p>
        <h3 id="http-23">HTTP 请求</h3>
        <ul>
            <li>POST <code>/fo/subAccount/create</code></li>
        </ul>
        <pre class="highlight json tab-json"><code>
{
  "originUid": "1234567",
  "ips": "127.0.0.1;127.0.0.2;127.0.0.3"
}
        </code></pre>
        <h3 id="1f9ac54b15-24">请求参数</h3>
        <table>
            <thead>
            <tr>
                <th>参数名称</th>
                <th>数据类型</th>
                <th>是否必需</th>
                <th>默认值</th>
                <th>描述</th>
            </tr>
            </thead>
            <tbody>
            <tr>
                <td>originUid</td>
                <td>string</td>
                <td>true</td>
                <td>NA</td>
                <td>自定义userId,注册时以此字段做幂等</td>
            </tr>
            <tr>
                <td>ips</td>
                <td>String</td>
                <td>false</td>
                <td>NA</td>
                <td>子账号白名单集合字符串，多个ip以英文逗号(;)分隔</td>
            </tr>
            </tbody>
        </table>

        <blockquote>
            <p>Response:</p>
        </blockquote>
        <pre class="highlight json tab-json"><code>{
  "code": 0,
  "msg": "success",
  "data": {
    "accessKey": "xxxxxxxxxxxxxxxxxxxxxxxxxxxx",
    "secretKey": "xxxxxxxxxxxxxxxxxxxxxxxxxxxx",
    "passphrase": "xxxxxxxxxxxxxxxxxxxxxxxxxxxx"
  }
}</code></pre>
        <h3 id="2213f4c32f-21">响应数据</h3>
        <table>
            <thead>
            <tr>
                <th>字段名称</th>
                <th>数据类型</th>
                <th>描述</th>
            </tr>
            </thead>
            <tbody>
            <tr>
                <td>accessKey</td>
                <td>string</td>
                <td>子账号accessKey</td>
            </tr>
            <tr>
                <td>secretKey</td>
                <td>string</td>
                <td>子账号secretKey，secretKey只能在此接口返回，子账号查询接口不返回secretKey</td>
            </tr>
            <tr>
                <td>passphrase</td>
                <td>string</td>
                <td>子账户密码</td>
            </tr>
            </tbody>
        </table>

        <h2 id="subAccountQuery">查询子账号</h2>
        <p>查询母账号下的所有子账号</p>
        <h3 id="http-25">HTTP 请求</h3>
        <ul>
            <li>GET <code>/fo/subAccount/list</code></li>
        </ul>
        <pre class="highlight json tab-json"><code>
{
  "page": 1,
  "size": 10
}
        </code></pre>
        <h3 id="1f9ac54b15-25">请求参数</h3>
        <table>
            <thead>
            <tr>
                <th>参数名称</th>
                <th>数据类型</th>
                <th>是否必需</th>
                <th>默认值</th>
                <th>描述</th>
            </tr>
            </thead>
            <tbody>
            <tr>
                <td>page</td>
                <td>number</td>
                <td>false</td>
                <td>1</td>
                <td>页码</td>
            </tr>
            <tr>
                <td>size</td>
                <td>number</td>
                <td>false</td>
                <td>10</td>
                <td>分页size</td>
            </tr>
            </tbody>
        </table>

        <blockquote>
            <p>Response:</p>
        </blockquote>
        <pre class="highlight json tab-json"><code>{
  "code": 0,
  "msg": "success",
  "data": {
    "totalCount": 101,
    "list": [
      {
        "accessKey": "xxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "userId": "123456",
        "ips": "192.168.1.10"
      },
      {
        "accessKey": "xxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "userId": "123457",
        "ips": "192.168.1.10"
      }
    ]
  }
}
        </code></pre>
        <h3 id="2213f4c32f-25">响应数据</h3>
        <table>
            <thead>
            <tr>
                <th>字段名称</th>
                <th>数据类型</th>
                <th>描述</th>
            </tr>
            </thead>
            <tbody>
            <tr>
                <td>totalCount</td>
                <td>long</td>
                <td>数据总行数</td>
            </tr>
            <tr>
                <td>list</td>
                <td>list</td>
                <td>查询页码的数据集合</td>
            </tr>
            </tbody>
        </table>
        <table>
            <thead>
            <tr>
                <th>字段名称</th>
                <th>数据类型</th>
                <th>描述</th>
            </tr>
            </thead>
            <tbody>
            <tr>
                <td>accessKey</td>
                <td>string</td>
                <td>子账号accessKey</td>
            </tr>
            <tr>
                <td>userId</td>
                <td>string</td>
                <td>子账号userId</td>
            </tr>
            <tr>
                <td>ips</td>
                <td>string</td>
                <td>子账户ip白名单</td>
            </tr>
            </tbody>
        </table>


        <h2 id="subAccountIpUpdate">更新子账号ip白名单</h2>
        <p>更新子账号ip白名单</p>
        <h3 id="http-26">HTTP 请求</h3>
        <ul>
            <li>POST <code>/fo/subAccount/updateIps</code></li>
        </ul>
        <pre class="highlight json tab-json"><code>
{
  "ips": "195.156.22.11;195.156.22.12",
  "subAccountKey": "xxxxxxxxxxxxxxxxxxxx"
}
        </code></pre>
        <h3 id="1f9ac54b15-26">请求参数</h3>
        <table>
            <thead>
            <tr>
                <th>参数名称</th>
                <th>数据类型</th>
                <th>是否必需</th>
                <th>默认值</th>
                <th>描述</th>
            </tr>
            </thead>
            <tbody>
            <tr>
                <td>ips</td>
                <td>String</td>
                <td>true</td>
                <td>NA</td>
                <td>ip地址，多个ip以英文逗号（;）分隔</td>
            </tr>
            <tr>
                <td>subAccountKey</td>
                <td>String</td>
                <td>false</td>
                <td>NA</td>
                <td>子账号accessKey</td>
            </tr>

            </tbody>
        </table>

        <blockquote>
            <p>Response:</p>
        </blockquote>
        <pre class="highlight json tab-json"><code>{
  "code": 0,
  "msg": "success",
  "data":
}</code></pre>
        <h3 id="2213f4c32f-26">响应数据</h3>
        <p>更新成功code=0,msg=success</p>
        <p>更新失败code=-1,msg为对应失败描述</p>



        <h2 id="subAccountTransfer">资金划转</h2>
        <p>主账号与子账号之间资金划转，主账号钱包账户直接划转到子账号合约账户，子账号合约账户直接划转到主账号钱包账户。</p>
        <p>以businessNo字段幂等，businessNo请求一次不管失败还是成功，都不能再次请求</p>
        <h3 id="http-27">HTTP 请求</h3>
        <ul>
            <li>POST <code>/fo/subAccount/transfer</code></li>
        </ul>
        <pre class="highlight json tab-json"><code>
{
  "businessNo": "1233444444",
  "currency": "BTC",
  "occurQty": "1"
  "type": "1"
  "subAccountKey": "xxxxxxxxxxx"
}
        </code></pre>
        <h3 id="1f9ac54b15-27">请求参数</h3>
        <table>
            <thead>
            <tr>
                <th>参数名称</th>
                <th>数据类型</th>
                <th>是否必需</th>
                <th>默认值</th>
                <th>描述</th>
            </tr>
            </thead>
            <tbody>
            <tr>
                <td>businessNo</td>
                <td>String</td>
                <td>true</td>
                <td>NA</td>
                <td>划转业务id</td>
            </tr>
            <tr>
                <td>currency</td>
                <td>String</td>
                <td>true</td>
                <td>NA</td>
                <td>币种名称</td>
            </tr>
            <tr>
                <td>occurQty</td>
                <td>String</td>
                <td>true</td>
                <td>NA</td>
                <td>划转量</td>
            </tr>
            <tr>
                <td>type</td>
                <td>Integer</td>
                <td>true</td>
                <td>NA</td>
                <td>划转类型，1：主账户划转子账户；2：子账户划转主账户</td>
            </tr>
            <tr>
                <td>subAccountKey</td>
                <td>String</td>
                <td>true</td>
                <td>NA</td>
                <td>子账号accessKey</td>
            </tr>

            </tbody>
        </table>

        <blockquote>
            <p>Response:</p>
        </blockquote>
        <pre class="highlight json tab-json"><code>{
  "code": 0,
  "msg": "success",
  "data":
}</code></pre>
        <h3 id="2213f4c32f-27">响应数据</h3>
        <p>更新成功code=0,msg=success</p>
        <p>更新失败code=-1,msg为对应失败描述</p>

    </div>
    <div class="dark-box">
        <div class="lang-selector">
            <a href="./follow_order_zh.htm?shell#" data-language-name="shell" class="active">shell</a>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        $("#toc a.toc-h1").on("click", function (e) {
            let tar = $(this);
            $("a.active-nav").removeClass("active-nav");
            $("ul.next-ul-show").removeClass("next-ul-show");
            tar.addClass("active-nav").next("ul").addClass("next-ul-show");
        });

    });
</script>


</body>
</html>